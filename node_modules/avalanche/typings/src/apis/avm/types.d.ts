/**
 * @packageDocumentation
 * @module AVMAPI-Types
 */
import { Buffer } from 'buffer/';
import BN from 'bn.js';
import { NBytes } from '../../utils/types';
import { Output } from './outputs';
export declare class AVMConstants {
    static LATESTCODEC: number;
    static ONEAVAX: BN;
    static DECIAVAX: BN;
    static CENTIAVAX: BN;
    static MILLIAVAX: BN;
    static MICROAVAX: BN;
    static SECPFXID: number;
    static NFTFXID: number;
    static SECPOUTPUTID: number;
    static NFTXFEROUTPUTID: number;
    static NFTMINTOUTPUTID: number;
    static SECPINPUTID: number;
    static NFTMINTOPID: number;
    static NFTXFEROP: number;
    static BASETX: number;
    static CREATEASSETTX: number;
    static OPERATIONTX: number;
    static IMPORTTX: number;
    static EXPORTTX: number;
    static SECPCREDENTIAL: number;
    static NFTCREDENTIAL: number;
    static ASSETIDLEN: number;
    static BLOCKCHAINIDLEN: number;
    static SYMBOLMAXLEN: number;
    static ASSETNAMELEN: number;
    static ADDRESSLENGTH: number;
}
/**
 * Type representing a [[Signature]] index used in [[Input]]
 */
export declare class SigIdx extends NBytes {
    source: Buffer;
    /**
       * Sets the source address for the signature
       */
    setSource: (address: Buffer) => void;
    /**
       * Retrieves the source address for the signature
       */
    getSource: () => Buffer;
    /**
       * Type representing a [[Signature]] index used in [[Input]]
       */
    constructor();
}
/**
 * Signature for a [[Tx]]
 */
export declare class Signature extends NBytes {
    /**
       * Signature for a [[Tx]]
       */
    constructor();
}
/**
 * Class for representing an address used in [[Output]] types
 */
export declare class Address extends NBytes {
    /**
       * Returns a function used to sort an array of [[Address]]es
       */
    static comparator: () => (a: Address, b: Address) => (1 | -1 | 0);
    /**
       * Returns a base-58 representation of the [[Address]].
       */
    toString(): string;
    /**
       * Takes a base-58 string containing an [[Address]], parses it, populates the class, and returns the length of the Address in bytes.
       *
       * @param bytes A base-58 string containing a raw [[Address]]
       *
       * @returns The length of the raw [[Address]]
       */
    fromString(addr: string): number;
    /**
       * Class for representing an address used in [[Output]] types
       */
    constructor();
}
/**
 * Class for representing a UTXOID used in [[TransferableOp]] types
 */
export declare class UTXOID extends NBytes {
    /**
       * Returns a function used to sort an array of [[UTXOID]]s
       */
    static comparator: () => (a: UTXOID, b: UTXOID) => (1 | -1 | 0);
    /**
       * Returns a base-58 representation of the [[UTXOID]].
       */
    toString(): string;
    /**
       * Takes a base-58 string containing an [[UTXOID]], parses it, populates the class, and returns the length of the UTXOID in bytes.
       *
       * @param bytes A base-58 string containing a raw [[UTXOID]]
       *
       * @returns The length of the raw [[UTXOID]]
       */
    fromString(utxoid: string): number;
    /**
       * Class for representing a UTXOID used in [[TransferableOp]] types
       */
    constructor();
}
/**
 * Class for creating initial output states used in asset creation
 */
export declare class InitialStates {
    protected fxs: {
        [fxid: number]: Array<Output>;
    };
    /**
       *
       * @param out The output state to add to the collection
       * @param fxid The FxID that will be used for this output, default AVMConstants.SECPFXID
       */
    addOutput(out: Output, fxid?: number): void;
    fromBuffer(bytes: Buffer, offset?: number): number;
    toBuffer(): Buffer;
    constructor();
}
/**
 * Rules used when merging sets
 */
export declare type MergeRule = 'intersection' | 'differenceSelf' | 'differenceNew' | 'symDifference' | 'union' | 'unionMinusNew' | 'unionMinusSelf' | 'ERROR';
/**
 * Function providing the current UNIX time using a {@link https://github.com/indutny/bn.js/|BN}
 */
export declare function UnixNow(): BN;
//# sourceMappingURL=types.d.ts.map