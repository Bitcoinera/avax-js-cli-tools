/**
 * @packageDocumentation
 * @module AVMAPI-Credentials
 */
import { Buffer } from 'buffer/';
import { Signature } from './types';
/**
 * Takes a buffer representing the credential and returns the proper [[Credential]] instance.
 *
 * @param credid A number representing the credential ID parsed prior to the bytes passed in
 *
 * @returns An instance of an [[Credential]]-extended class.
 */
export declare const SelectCredentialClass: (credid: number, ...args: Array<any>) => Credential;
export declare abstract class Credential {
    protected sigArray: Array<Signature>;
    abstract getCredentialID(): number;
    /**
       * Adds a signature to the credentials and returns the index off the added signature.
       */
    addSignature: (sig: Signature) => number;
    fromBuffer(bytes: any, offset?: number): number;
    toBuffer(): Buffer;
    constructor(sigarray?: Array<Signature>);
}
export declare class SecpCredential extends Credential {
    getCredentialID(): number;
}
export declare class NFTCredential extends Credential {
    getCredentialID(): number;
}
//# sourceMappingURL=credentials.d.ts.map